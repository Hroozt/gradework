---
# Таски для установки и конфигурирования скуля

#Присваиваем переменные
- name: get facts 
  ansible.builtin.set_fact:
    ip: "{{ ansible_facts.all_ipv4_addresses[0] }}"

#Установка скуля
- name: install mysql server
  become: true
  ansible.builtin.apt:
    name: mysql-server
    state: latest
    update_cache: yes

#Замена конфиг файлов
- name: copy config
  become: true
  template:
    src: "{{ cluster_role }}/mysqld.cnf"
    dest: /etc/mysql/mysql.conf.d/
    force: true

#Перезапуск скуля
- name: Restart MySql
  become: true
  service:
    name: mysql
    state: restarted

#Установка pip менеджера
- name: install pip3
  become: true
  apt: name=python3-pip state=present 

#Установка библиотеки phyton pymsql
- name: Install dependency
  become: true
  ansible.builtin.pip:
    name: PyMySQL
    state: latest
    executable: pip3

#Создание пользователя для репликации на сервере master
- name: create slave user
  become: true
  mysql_user:
    name: "{{ mysql_slave_user }}" 
    host: '%'
    priv: "*.*:REPLICATION SLAVE"
    password: "{{ mysql_slave_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: cluster_role == 'master'

#Регистрируем "Мастера кластера"
- name: get master status 
  become: true
  community.mysql.mysql_query:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    query: SHOW MASTER STATUS;
  delegate_to: "{{ mysql_master }}"
  when: cluster_role == 'slave'
  register: master_status

#Запись значений о master в переменные для slave
- name: set variable
  ansible.builtin.set_fact:
    master_log_file: "{{ master_status.query_result[0][0].File }}"
    master_postion:  "{{ master_status.query_result[0][0].Position }}"
  when: cluster_role == 'slave'  

#Остановка slave
- name: Slave Stop Slave
  become: true
  community.mysql.mysql_query:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    query: "STOP SLAVE;"
  when: cluster_role == 'slave'

#Задаем master на slave
- name: Change Master
  become: true
  community.mysql.mysql_query:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    query: "CHANGE MASTER TO MASTER_HOST='{{ mysql_master_ip }}',MASTER_USER='{{ mysql_slave_user }}', MASTER_PASSWORD='{{ mysql_slave_password }}', MASTER_LOG_FILE='{{ master_log_file }}',MASTER_LOG_POS={{ master_postion }};"
  when: cluster_role == 'slave'

#Запуск slave
- name: start slave
  become: true
  community.mysql.mysql_query:
    login_unix_socket: /var/run/mysqld/mysqld.sock
    query: "START SLAVE;"
  when: cluster_role == 'slave'

#Создание бд WordPress
- name: Create WP DataBase
  become: true
  community.mysql.mysql_db:
    name: "{{ mysql_wp_database }}" 
    state: present
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: cluster_role == 'master'

#Создание пользователя репликации на сервере master
- name: create wordpress user
  become: true
  community.mysql.mysql_user:
    name: "{{ mysql_wp_user }}" 
    host: '%'
    priv: "{{ mysql_wp_database }}.*:ALL PRIVILEGES"
    password: "{{ mysql_wp_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  when: cluster_role == 'master'